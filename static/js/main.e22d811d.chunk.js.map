{"version":3,"sources":["components/ImageObj.tsx","components/ImageDisplay.tsx","components/InputForm.tsx","components/Footer.tsx","components/Main.tsx","App.tsx","index.tsx"],"names":["ImageObj","url","loading","Image","src","fluid","ImageDisplay","url1","url2","Col","InputForm","onChange","onSubmit","Form","Group","controlId","Label","Control","placeholder","type","required","Button","variant","onClick","Footer","Container","Row","text-align","href","className","request","require","Main","React","useState","imageUrl","searchTerm","tileSize","fields","setFields","setImageUrl","result","setResult","setLoading","xs","span","offset","event","key","target","id","val","value","stateUpdate","method","body","Number","headers","json","then","console","log","catch","error","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e22d811d.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Image } from 'react-bootstrap';\n\nconst ImageObj: React.FC<{ url?: string; loading?: boolean }> = ({ url, loading }) => {\n  const loadingGif = 'https://media2.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif';\n\n  if (loading) {\n    return (\n      <Image src={loadingGif} fluid={true}/>\n    );\n  }\n\n  return (\n    <Image src={url} fluid={true}/>\n  );\n};\n\nexport default ImageObj;\n","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\n\nimport ImageObj from './ImageObj';\n\nconst ImageDisplay: React.FC<{ url1?: string; url2?: string; loading: boolean}> = ({ url1, url2, loading }) => {\n  return (\n    <>\n      <Col>\n        <ImageObj url={url1}/>\n      </Col>\n      <Col>\n        <ImageObj url={url2} loading={loading}/>\n      </Col>\n    </>\n  );\n};\n\nexport default ImageDisplay;\n","import React from 'react';\n\nimport { Button, Form } from 'react-bootstrap';\n\ninterface FormFields {\n  imageUrl: string;\n  searchTerm: string;\n  tileSize: string;\n};\n\ntype InputChangeEvent = React.FormEvent<any> &\n  {\n    target: {\n      id: keyof FormFields;\n      value: FormFields[keyof FormFields];\n    };\n  }\n\ninterface InputFormProps {\n  onChange: (event: InputChangeEvent) => void;\n  onSubmit: VoidFunction;\n}\n\nconst InputForm: React.FC<InputFormProps> = ({ onChange, onSubmit }) => {\n  return (\n    <Form>\n      <Form.Group controlId=\"imageUrl\">\n        <Form.Label>Image Url</Form.Label>\n        <Form.Control\n          placeholder=\"Enter image url\"\n          type=\"text\"\n          onChange={onChange}\n          required/>\n      </Form.Group>\n\n      <Form.Group controlId=\"searchTerm\">\n        <Form.Label>Search Term</Form.Label>\n        <Form.Control\n          placeholder=\"Search Term\"\n          type=\"text\"\n          onChange={onChange}\n          required/>\n      </Form.Group>\n\n      <Form.Group controlId=\"tileSize\">\n        <Form.Label>Tile Size (px)</Form.Label>\n        <Form.Control\n          placeholder=\"5\"\n          type=\"text\"\n          onChange={onChange}\n          required/>\n      </Form.Group>\n\n      <Button variant=\"primary\" onClick={onSubmit}>\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default InputForm;\n","import React from 'react';\n\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst Footer: React.FC = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <hr/>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <a text-align=\"center\" href={'https://github.com/JamesDalboth/MosaiclyOnline'}>\n            <h4 className=\"text-center\">\n              Source Code\n            </h4>\n          </a>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <p className=\"text-center\">\n            Built by James Dalboth\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <a text-align=\"center\" href={'https://github.com/JamesDalboth/Mosaicly'}>\n            <h4 className=\"text-center\">\n              Original Source Code\n            </h4>\n          </a>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <p className=\"text-center\">\n            Original built by James Dalboth, Matthew Ho, Rohit Prasad and Harry Black\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport ImageDisplay from './ImageDisplay';\nimport InputForm from './InputForm';\nimport Footer from './Footer';\n\n// eslint-disable-next-line\nconst request = require('request-promise');\n\ninterface FormFields {\n  imageUrl: string;\n  searchTerm: string;\n  tileSize: string;\n};\n\ntype InputChangeEvent = React.FormEvent<any> &\n  {\n    target: {\n      id: keyof FormFields;\n      value: FormFields[keyof FormFields];\n    };\n  }\n\nconst Main: React.FC = () => {\n  const [fields, setFields] = React.useState<FormFields>(\n    {\n      imageUrl: '',\n      searchTerm: '',\n      tileSize: '',\n    },\n  );\n\n  const [imageUrl, setImageUrl] = React.useState<string>();\n  const [result, setResult] = React.useState<string>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const onSubmit = (): void => {\n    setLoading(true);\n    setImageUrl(fields.imageUrl);\n\n    request({\n      method: 'POST',\n      url: 'https://hmdvu2o3zh.execute-api.us-east-1.amazonaws.com/prod',\n      body: {\n        'searchTerm': fields.searchTerm,\n        'imageUrl': fields.imageUrl,\n        'tileSize': Number(fields.tileSize),\n      },\n      headers: {\n        'Origin': 'http://dalboth.com/MosaiclyOnline/',\n      },\n      json: true,\n    })\n      .then((url: string) => {\n        console.log(url);\n        setResult(url);\n        setLoading(false);\n      })\n      .catch(console.error);\n  };\n\n  const onChange = (event: InputChangeEvent): void => {\n    const key = event.target.id;\n    const val = event.target.value;\n\n    const stateUpdate = { fields: fields as Pick<FormFields, keyof FormFields> };\n    stateUpdate.fields[key] = val;\n    setFields(stateUpdate.fields);\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-center\">Mosaicly Online</h1>\n          <hr/>\n        </Col>\n      </Row>\n      <Row>\n        <ImageDisplay url1={imageUrl} url2={result} loading={loading}/>\n      </Row>\n      <Row>\n        <Col xs={{ span: 8, offset: 2 }}>\n          <InputForm onChange={onChange} onSubmit={onSubmit}/>\n        </Col>\n      </Row>\n      <Row>\n        <Footer/>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\n\nfunction App (): JSX.Element {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './theme.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}