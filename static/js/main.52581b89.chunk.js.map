{"version":3,"sources":["components/ImageObj.tsx","components/ImageDisplay.tsx","components/InputForm.tsx","components/FileUpload.tsx","components/Footer.tsx","components/Main.tsx","App.tsx","index.tsx"],"names":["ImageObj","url","loading","Image","src","fluid","undefined","thumbnail","ImageDisplay","url1","url2","Row","Col","xs","span","offset","className","href","download","InputForm","onChange","onSubmit","Form","Group","controlId","Label","Control","placeholder","type","required","Button","variant","onClick","FileUpload","onDrop","multiple","getRootProps","getInputProps","style","border","margin","Footer","Container","text-align","request","require","Main","React","useState","searchTerm","tileSize","fields","setFields","imageData","setImageData","result","setResult","setLoading","files","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","toBase64","then","base64","catch","console","log","event","key","target","id","val","value","stateUpdate","method","body","Number","headers","json","err","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52581b89.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Image } from 'react-bootstrap';\n\nconst ImageObj: React.FC<{ url?: string; loading?: boolean }> = ({ url, loading }) => {\n  const loadingGif = 'https://media2.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif';\n  const defaultImg = 'https://www.mycontact.london/wp-content/uploads/2019/01/grey-square.png';\n\n  if (loading) {\n    return (\n      <Image src={loadingGif} fluid={true}/>\n    );\n  }\n\n  if (url === undefined) {\n    return (\n      <Image src={defaultImg} fluid={true} thumbnail/>\n    )\n  }\n\n  return (\n    <Image src={url} fluid={true} thumbnail/>\n  );\n};\n\nexport default ImageObj;\n","import React from 'react';\n\nimport { Col, Row } from 'react-bootstrap';\n\nimport ImageObj from './ImageObj';\n\nconst ImageDisplay: React.FC<{ url1?: string; url2?: string; loading: boolean}> = ({ url1, url2, loading }) => {\n  return (\n    <Row>\n      <Col xs={{ span: 3, offset: 2 }}>\n        <h3 className=\"text-center\"> Original </h3>\n        <ImageObj url={url1}/>\n      </Col>\n      <Col xs={{ span: 3, offset: 2 }}>\n        <h3 className=\"text-center\"> Mosaic'd </h3>\n        <ImageObj url={url2} loading={loading}/>\n        {url2 !== undefined && <a href={url2} download>\n          <h4 className=\"text-center\"> Download </h4>\n          </a>}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ImageDisplay;\n","import React from 'react';\n\nimport { Button, Form } from 'react-bootstrap';\n\ninterface FormFields {\n  searchTerm: string;\n  tileSize: string;\n};\n\ntype InputChangeEvent = React.FormEvent<any> &\n  {\n    target: {\n      id: keyof FormFields;\n      value: FormFields[keyof FormFields];\n    };\n  }\n\ninterface InputFormProps {\n  onChange: (event: InputChangeEvent) => void;\n  onSubmit: VoidFunction;\n}\n\nconst InputForm: React.FC<InputFormProps> = ({ onChange, onSubmit }) => {\n  return (\n    <>\n      <Form>\n        <Form.Group controlId=\"searchTerm\">\n          <Form.Label>Search Term</Form.Label>\n          <Form.Control\n            placeholder=\"Search Term\"\n            type=\"text\"\n            onChange={onChange}\n            required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"tileSize\">\n          <Form.Label>Tile Size (px)</Form.Label>\n          <Form.Control\n            placeholder=\"5\"\n            type=\"text\"\n            onChange={onChange}\n            required/>\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={onSubmit}>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default InputForm;\n","import React from 'react';\nimport Dropzone from 'react-dropzone';\n\nimport { Col, Row } from 'react-bootstrap';\n\nconst FileUpload: React.FC<{ onDrop: (files: any[]) => void }> = ({ onDrop }) => {\n  return (\n    <Row>\n      <Col xs={{ span: 6, offset: 3 }}>\n        <Dropzone\n          multiple={false}\n          onDrop={onDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <section>\n              <div {...getRootProps()} style={{ border: '2px dashed grey', margin: '25px' }}>\n                <input {...getInputProps()} />\n                <p className=\"text-center\">Upload a file here!</p>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n      </Col>\n    </Row>\n  );\n};\n\nexport default FileUpload;\n","import React from 'react';\n\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst Footer: React.FC = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <hr/>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <a text-align=\"center\" href={'https://github.com/JamesDalboth/MosaiclyOnline'}>\n            <h4 className=\"text-center\">\n              Source Code\n            </h4>\n          </a>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <p className=\"text-center\">\n            Built by James Dalboth\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <a text-align=\"center\" href={'https://github.com/JamesDalboth/Mosaicly'}>\n            <h4 className=\"text-center\">\n              Original Source Code\n            </h4>\n          </a>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <p className=\"text-center\">\n            Original built by James Dalboth, Matthew Ho, Rohit Prasad and Harry Black\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport ImageDisplay from './ImageDisplay';\nimport InputForm from './InputForm';\nimport FileUpload from './FileUpload';\nimport Footer from './Footer';\n\n// eslint-disable-next-line\nconst request = require('request-promise');\n\ninterface FormFields {\n  searchTerm: string;\n  tileSize: string;\n};\n\ntype InputChangeEvent = React.FormEvent<any> &\n  {\n    target: {\n      id: keyof FormFields;\n      value: FormFields[keyof FormFields];\n    };\n  }\n\nconst Main: React.FC = () => {\n  const [fields, setFields] = React.useState<FormFields>(\n    {\n      searchTerm: '',\n      tileSize: '',\n    },\n  );\n  const [imageData, setImageData] = React.useState<string>();\n  const [result, setResult] = React.useState<string>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const onSubmit = (): void => {\n    setLoading(true);\n    setResult(undefined);\n\n    request({\n      method: 'POST',\n      url: 'https://hmdvu2o3zh.execute-api.us-east-1.amazonaws.com/prod',\n      body: {\n        'searchTerm': fields.searchTerm,\n        'data': imageData,\n        'tileSize': Number(fields.tileSize),\n      },\n      headers: {\n        'Origin': 'http://dalboth.com/MosaiclyOnline/',\n      },\n      json: true,\n    })\n      .then((url: string) => {\n        setResult(url);\n        setLoading(false);\n      })\n      .catch((err: any) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n\n  const onChange = (event: InputChangeEvent): void => {\n    const key = event.target.id;\n    const val = event.target.value;\n\n    const stateUpdate = { fields: fields as Pick<FormFields, keyof FormFields> };\n    stateUpdate.fields[key] = val;\n    setFields(stateUpdate.fields);\n  };\n\n  const toBase64 = (file: any): Promise<string> => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = error => reject(error);\n  });\n\n  const onDrop = (files: any[]): void => {\n    const file = files[0];\n    toBase64(file)\n      .then((base64: string) => setImageData(base64))\n      .catch(console.log);\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-center\">Mosaicly Online</h1>\n          <hr/>\n        </Col>\n      </Row>\n      <ImageDisplay url1={imageData} url2={result} loading={loading}/>\n      <FileUpload onDrop={onDrop}/>\n      <Row>\n        <Col xs={{ span: 8, offset: 2 }}>\n          <InputForm onChange={onChange} onSubmit={onSubmit}/>\n        </Col>\n      </Row>\n      <Row>\n        <Footer/>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\n\nfunction App (): JSX.Element {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './theme.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}