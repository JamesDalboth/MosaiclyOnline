{"version":3,"sources":["Image.tsx","ImageDisplay.tsx","Main.tsx","App.tsx","index.tsx"],"names":["ImageObj","url","loading","Image","src","fluid","ImageDisplay","url1","url2","Col","request","require","Main","React","useState","imageUrl","searchTerm","tileSize","fields","setFields","setImageUrl","result","setResult","setLoading","onChange","event","key","target","id","val","value","stateUpdate","Container","xs","span","offset","Row","Form","Group","controlId","Label","Control","placeholder","type","required","Button","variant","onClick","method","body","Number","headers","json","then","console","log","catch","error","App","ReactDOM","render","document","getElementById"],"mappings":"mcAkBeA,EAdiD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,IAGjE,OAHoF,EAAdC,QAKlE,kBAACC,EAAA,EAAD,CAAOC,IAJQ,8DAISC,OAAO,IAKjC,kBAACF,EAAA,EAAD,CAAOC,IAAKH,EAAKI,OAAO,KCKbC,EAbmE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMN,EAAc,EAAdA,QAC/F,OACE,oCACE,kBAACO,EAAA,EAAD,KACE,kBAAC,EAAD,CAAUR,IAAKM,KAEjB,kBAACE,EAAA,EAAD,KACE,kBAAC,EAAD,CAAUR,IAAKO,EAAMN,QAASA,OCNhCQ,EAAUC,EAAQ,KAoHTC,EApGQ,WAAO,IAAD,EACCC,IAAMC,SAChC,CACEC,SAAU,GACVC,WAAY,GACZC,SAAU,KALa,mBACpBC,EADoB,KACZC,EADY,OASKN,IAAMC,WATX,mBASpBC,EAToB,KASVK,EATU,OAUCP,IAAMC,WAVP,mBAUpBO,EAVoB,KAUZC,EAVY,OAWGT,IAAMC,UAAkB,GAX3B,mBAWpBZ,EAXoB,KAWXqB,EAXW,KAsCrBC,EAAW,SAACC,GAChB,IAAMC,EAAMD,EAAME,OAAOC,GACnBC,EAAMJ,EAAME,OAAOG,MAEnBC,EAAc,CAAEb,OAAQA,GAC9Ba,EAAYb,OAAOQ,GAAOG,EAC1BV,EAAUY,EAAYb,SAGxB,OACE,kBAACc,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAD,CAAKwB,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,kBAACC,EAAA,EAAD,KACE,kBAAC3B,EAAA,EAAD,KACE,iDAGJ,kBAAC2B,EAAA,EAAD,KACE,kBAAC,EAAD,CAAc7B,KAAMQ,EAAUP,KAAMa,EAAQnB,QAASA,KAEvD,kBAACkC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,YAAY,kBACZC,KAAK,OACLnB,SAAUA,EACVoB,UAAQ,KAGZ,kBAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,YAAY,cACZC,KAAK,OACLnB,SAAUA,EACVoB,UAAQ,KAGZ,kBAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,MAAN,uBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,YAAY,IACZC,KAAK,OACLnB,SAAUA,EACVoB,UAAQ,KAGZ,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA1EnB,WACfxB,GAAW,GACXH,EAAYF,EAAOH,UAEnBL,EAAQ,CACNsC,OAAQ,OACR/C,IAAK,8DACLgD,KAAM,CACJ,WAAc/B,EAAOF,WACrB,SAAYE,EAAOH,SACnB,SAAYmC,OAAOhC,EAAOD,WAE5BkC,QAAS,CACP,OAAU,sCAEZC,MAAM,IAELC,MAAK,SAACpD,GACLqD,QAAQC,IAAItD,GACZqB,EAAUrB,GACVsB,GAAW,MAEZiC,MAAMF,QAAQG,SAoDT,YAKJ,kBAACrB,EAAA,EAAD,qFCxGOsB,MANf,WACE,OACE,kBAAC,EAAD,O,OCDJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a1ad8461.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Image } from 'react-bootstrap';\n\nconst ImageObj: React.FC<{ url?: string; loading?: boolean }> = ({ url, loading }) => {\n  const loadingGif = 'https://media2.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif';\n\n  if (loading) {\n    return (\n      <Image src={loadingGif} fluid={true}/>\n    );\n  }\n\n  return (\n    <Image src={url} fluid={true}/>\n  );\n};\n\nexport default ImageObj;\n","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\n\nimport ImageObj from './Image';\n\nconst ImageDisplay: React.FC<{ url1?: string; url2?: string; loading: boolean}> = ({ url1, url2, loading }) => {\n  return (\n    <>\n      <Col>\n        <ImageObj url={url1}/>\n      </Col>\n      <Col>\n        <ImageObj url={url2} loading={loading}/>\n      </Col>\n    </>\n  );\n};\n\nexport default ImageDisplay;\n","import React from 'react';\n\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\n\nimport ImageDisplay from './ImageDisplay';\n\n// eslint-disable-next-line\nconst request = require('request-promise');\n\ninterface FormFields {\n  imageUrl: string;\n  searchTerm: string;\n  tileSize: string;\n};\n\ntype InputChangeEvent = React.FormEvent<any> &\n  {\n    target: {\n      id: keyof FormFields;\n      value: FormFields[keyof FormFields];\n    };\n  }\n\nconst Main: React.FC = () => {\n  const [fields, setFields] = React.useState<FormFields>(\n    {\n      imageUrl: '',\n      searchTerm: '',\n      tileSize: '',\n    },\n  );\n\n  const [imageUrl, setImageUrl] = React.useState<string>();\n  const [result, setResult] = React.useState<string>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const onSubmit = (): void => {\n    setLoading(true);\n    setImageUrl(fields.imageUrl);\n\n    request({\n      method: 'POST',\n      url: 'https://hmdvu2o3zh.execute-api.us-east-1.amazonaws.com/prod',\n      body: {\n        'searchTerm': fields.searchTerm,\n        'imageUrl': fields.imageUrl,\n        'tileSize': Number(fields.tileSize),\n      },\n      headers: {\n        'Origin': 'http://dalboth.com/MosaiclyOnline/',\n      },\n      json: true,\n    })\n      .then((url: string) => {\n        console.log(url);\n        setResult(url);\n        setLoading(false);\n      })\n      .catch(console.error);\n  };\n\n  const onChange = (event: InputChangeEvent): void => {\n    const key = event.target.id;\n    const val = event.target.value;\n\n    const stateUpdate = { fields: fields as Pick<FormFields, keyof FormFields> };\n    stateUpdate.fields[key] = val;\n    setFields(stateUpdate.fields);\n  };\n\n  return (\n    <Container>\n      <Col xs={{ span: 8, offset: 2 }}>\n        <Row>\n          <Col>\n            <h1>Mosaicly Online</h1>\n          </Col>\n        </Row>\n        <Row>\n          <ImageDisplay url1={imageUrl} url2={result} loading={loading}/>\n        </Row>\n        <Row>\n          <Form>\n            <Form.Group controlId=\"imageUrl\">\n              <Form.Label>Image Url</Form.Label>\n              <Form.Control\n                placeholder=\"Enter image url\"\n                type=\"text\"\n                onChange={onChange}\n                required/>\n            </Form.Group>\n\n            <Form.Group controlId=\"searchTerm\">\n              <Form.Label>Search Term</Form.Label>\n              <Form.Control\n                placeholder=\"Search Term\"\n                type=\"text\"\n                onChange={onChange}\n                required/>\n            </Form.Group>\n\n            <Form.Group controlId=\"tileSize\">\n              <Form.Label>Tile Size (px)</Form.Label>\n              <Form.Control\n                placeholder=\"5\"\n                type=\"text\"\n                onChange={onChange}\n                required/>\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={onSubmit}>\n              Submit\n            </Button>\n          </Form>\n        </Row>\n        <Row>\n          Original built by James Dalboth, Matthew Ho, Rohit Prasad and Harry Black\n        </Row>\n      </Col>\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\n\nimport Main from './Main';\n\nfunction App (): JSX.Element {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './theme.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}