{"version":3,"sources":["components/ImageObj.tsx","components/ImageDisplay.tsx","components/InputForm.tsx","components/FileUpload.tsx","components/Footer.tsx","components/Main.tsx","App.tsx","index.tsx"],"names":["ImageObj","url","loading","missing","defaultImg","Image","src","fluid","undefined","style","border","thumbnail","ImageDisplay","src1","src2","missingImage","Row","Col","xs","span","offset","className","color","href","download","InputForm","onChange","onSubmit","onCheck","Form","Group","controlId","Label","Control","placeholder","type","required","Feedback","Check","label","event","target","checked","Button","variant","FileUpload","onDrop","multiple","getRootProps","getInputProps","margin","Footer","Container","text-align","request","require","Main","React","useState","searchTerm","tileSize","colourAdjustment","fields","setFields","imageData","setImageData","result","setResult","setLoading","setMissingImage","files","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","toBase64","then","base64","catch","console","log","key","id","val","value","stateUpdate","preventDefault","method","body","Number","headers","json","err","App","ReactDOM","render","document","getElementById"],"mappings":"kbA8BeA,EA1BmE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAE3FC,EAAa,0EAEnB,OAAIF,EAEA,kBAACG,EAAA,EAAD,CAAOC,IALQ,8DAKSC,OAAO,SAIvBC,IAARP,EACEE,EAEA,kBAACE,EAAA,EAAD,CAAOI,MAAO,CAAEC,OAAQ,iBAAmBJ,IAAKF,EAAYG,OAAO,EAAMI,WAAS,IAIpF,kBAACN,EAAA,EAAD,CAAOC,IAAKF,EAAYG,OAAO,EAAMI,WAAS,IAKhD,kBAACN,EAAA,EAAD,CAAOC,IAAKL,EAAKM,OAAO,EAAMI,WAAS,KCsB5BC,EAnCmC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,KAAMZ,EAA4B,EAA5BA,QAASa,EAAmB,EAAnBA,aAkBxE,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,wBAAIC,UAAU,eAAd,cAnBAN,EAEA,oCACE,kBAAC,EAAD,CAAUd,IAAKY,EAAMV,SAAS,IAC9B,wBAAIkB,UAAU,cAAcZ,MAAO,CAAEa,MAAO,QAA5C,4BAQJ,kBAAC,EAAD,CAAUrB,IAAKY,EAAMV,SAAS,KAU9B,kBAACc,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,wBAAIC,UAAU,eAAd,cACA,kBAAC,EAAD,CAAUpB,IAAKa,EAAMZ,QAASA,EAASC,SAAS,SACtCK,IAATM,GAAsB,uBAAGS,KAAMT,EAAMU,UAAQ,GAC5C,wBAAIH,UAAU,eAAd,kB,kBC0BKI,EA3C6B,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACjE,OACE,oCACE,kBAACC,EAAA,EAAD,CAAMF,SAAUA,GACd,kBAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,YAAY,cACZC,KAAK,OACLT,SAAUA,EACVU,UAAQ,IACV,kBAACP,EAAA,EAAKI,QAAQI,SAAd,CAAuBF,KAAK,SAA5B,iBAKF,kBAACN,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,MAAN,uBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,YAAY,IACZC,KAAK,OACLT,SAAUA,EACVU,UAAQ,IACV,kBAACP,EAAA,EAAKI,QAAQI,SAAd,CAAuBF,KAAK,SAA5B,iBAKF,kBAACN,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBACpB,kBAACF,EAAA,EAAKS,MAAN,CACEH,KAAK,WACLI,MAAM,yBACNb,SAAU,SAACc,GAAD,OAAgBZ,EAAQ,mBAAoBY,EAAMC,OAAOC,aAGvE,kBAACC,EAAA,EAAD,CAAQR,KAAK,SAASS,QAAQ,WAA9B,a,SCjCOC,EArBkD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClE,OACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,kBAAC,IAAD,CACE2B,UAAU,EACVD,OAAQA,IACP,gBAAGE,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,iCACE,yCAASD,IAAT,CAAyBvC,MAAO,CAAEC,OAAQ,kBAAmBwC,OAAQ,UACnE,0BAAWD,KACX,uBAAG5B,UAAU,eAAb,+BCgCD8B,EA5CU,WACvB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,+BAGJ,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uBAAGoC,aAAW,SAAS9B,KAAM,kDAC3B,wBAAIF,UAAU,eAAd,kBAMN,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uBAAGI,UAAU,eAAb,4BAKJ,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uBAAGoC,aAAW,SAAS9B,KAAM,4CAC3B,wBAAIF,UAAU,eAAd,2BAMN,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uBAAGI,UAAU,eAAb,iFC7BJiC,EAAUC,EAAQ,KA0HTC,EA1GQ,WAAO,IAAD,EACCC,IAAMC,SAChC,CACEC,WAAY,GACZC,SAAU,GACVC,iBAAkB,KALK,mBACpBC,EADoB,KACZC,EADY,OAQON,IAAMC,WARb,mBAQpBM,EARoB,KAQTC,EARS,OASCR,IAAMC,WATP,mBASpBQ,EAToB,KASZC,EATY,OAUGV,IAAMC,UAAkB,GAV3B,mBAUpBxD,EAVoB,KAUXkE,EAVW,OAWaX,IAAMC,UAAkB,GAXrC,mBAWpB3C,EAXoB,KAWNsD,EAXM,KAgF3B,OACE,kBAACjB,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAII,UAAU,eAAd,mBACA,+BAGJ,kBAAC,EAAD,CACER,KAAMmD,EACNlD,KAAMoD,EACNhE,QAASA,EACTa,aAAcA,IAChB,kBAAC,EAAD,CAAY+B,OArBD,SAACwB,IAPC,SAACC,GAAD,OAAgC,IAAIC,SAAQ,SAACC,EAASC,GACrE,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOT,SACrCS,EAAOI,QAAU,SAAAC,GAAK,OAAIN,EAAOM,QAKjCC,CADaX,EAAM,IAEhBY,MAAK,SAACC,GAAD,OAAoBlB,EAAakB,MACtCD,MAAK,kBAAMb,GAAgB,MAC3Be,MAAMC,QAAQC,QAiBf,kBAACtE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,kBAAC,EAAD,CAAWM,SA9CF,SAACc,GAChB,IAAM+C,EAAM/C,EAAMC,OAAO+C,GACnBC,EAAMjD,EAAMC,OAAOiD,MAEnBC,EAAc,CAAE7B,OAAQA,GAC9B6B,EAAY7B,OAAOyB,GAAOE,EAC1B1B,EAAU4B,EAAY7B,SAwCenC,SAnFtB,SAACa,GAChBA,EAAMoD,sBAEYpF,IAAdwD,GAKJK,GAAgB,GAEhBD,GAAW,GACXD,OAAU3D,GAEV8C,EAAQ,CACNuC,OAAQ,OACR5F,IAAK,8DACL6F,KAAM,CACJ,WAAchC,EAAOH,WACrB,KAAQK,EACR,SAAY+B,OAAOjC,EAAOF,UAC1B,iBAAgD,SAA5BE,EAAOD,kBAE7BmC,QAAS,CACP,OAAU,sCAEZC,MAAM,IAELf,MAAK,SAACjF,GACLkE,EAAUlE,GACVmE,GAAW,MAEZgB,OAAM,SAACc,GACNb,QAAQC,IAAIY,GACZ9B,GAAW,OA7BbC,GAAgB,IA+EuCzC,QArC3C,SAAC2D,EAAaE,GAC5B,IAAME,EAAc,CAAE7B,OAAQA,GAC7B6B,EAAoB7B,OAAOyB,GAAO,GAAKE,EACxC1B,EAAU4B,EAAY7B,aAqCpB,kBAAC9C,EAAA,EAAD,KACE,kBAAC,EAAD,SCnHOmF,MANf,WACE,OACE,kBAAC,EAAD,O,OCDJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.91b382d9.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Image } from 'react-bootstrap';\n\nconst ImageObj: React.FC<{ url?: string; loading?: boolean; missing: boolean }> = ({ url, loading, missing }) => {\n  const loadingGif = 'https://media2.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif';\n  const defaultImg = 'https://www.mycontact.london/wp-content/uploads/2019/01/grey-square.png';\n\n  if (loading) {\n    return (\n      <Image src={loadingGif} fluid={true}/>\n    );\n  }\n\n  if (url === undefined) {\n    if (missing) {\n      return (\n        <Image style={{ border: '2px solid red' }} src={defaultImg} fluid={true} thumbnail/>\n      );\n    }\n    return (\n      <Image src={defaultImg} fluid={true} thumbnail/>\n    );\n  }\n\n  return (\n    <Image src={url} fluid={true} thumbnail/>\n  );\n};\n\nexport default ImageObj;\n","import React from 'react';\n\nimport { Col, Row } from 'react-bootstrap';\n\nimport ImageObj from './ImageObj';\n\ninterface ImageDisplayProps {\n  src1?: string;\n  src2?: string;\n  loading: boolean;\n  missingImage: boolean;\n}\n\nconst ImageDisplay: React.FC<ImageDisplayProps> = ({ src1, src2, loading, missingImage }) => {\n  const getImageObj = (): JSX.Element => {\n    if (missingImage) {\n      return (\n        <>\n          <ImageObj url={src1} missing={true}/>\n          <h5 className=\"text-center\" style={{ color: 'red' }}>\n            Please upload an image!\n          </h5>\n        </>\n      );\n    }\n\n    return (\n      <ImageObj url={src1} missing={false}/>\n    );\n  };\n\n  return (\n    <Row>\n      <Col xs={{ span: 3, offset: 2 }}>\n        <h3 className=\"text-center\"> Original </h3>\n        {getImageObj()}\n      </Col>\n      <Col xs={{ span: 3, offset: 2 }}>\n        <h3 className=\"text-center\"> Mosaiced </h3>\n        <ImageObj url={src2} loading={loading} missing={false}/>\n        {src2 !== undefined && <a href={src2} download>\n          <h4 className=\"text-center\"> Download </h4>\n        </a>}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ImageDisplay;\n","import React from 'react';\n\nimport { Button, Form } from 'react-bootstrap';\n\ninterface FormFields {\n  searchTerm: string;\n  tileSize: string;\n  colourAdjustment: string;\n};\n\ntype InputChangeEvent = React.FormEvent<any> &\n  {\n    target: {\n      id: keyof FormFields;\n      value: FormFields[keyof FormFields];\n    };\n  }\n\ninterface InputFormProps {\n  onChange: (event: InputChangeEvent) => void;\n  onSubmit: (event: React.FormEvent<any>) => void;\n  onCheck: (key: string, val: boolean) => void;\n}\n\nconst InputForm: React.FC<InputFormProps> = ({ onChange, onSubmit, onCheck }) => {\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <Form.Group controlId=\"searchTerm\">\n          <Form.Label>Search Term</Form.Label>\n          <Form.Control\n            placeholder=\"Search Term\"\n            type=\"text\"\n            onChange={onChange}\n            required/>\n          <Form.Control.Feedback type=\"valid\">\n            Looks Good!.\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"tileSize\">\n          <Form.Label>Tile Size (px)</Form.Label>\n          <Form.Control\n            placeholder=\"5\"\n            type=\"text\"\n            onChange={onChange}\n            required/>\n          <Form.Control.Feedback type=\"valid\">\n            Looks Good!.\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"colourAdjustment\">\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Colour Adjustment Mode\"\n            onChange={(event: any) => onCheck('colourAdjustment', event.target.checked)}/>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default InputForm;\n","import React from 'react';\nimport Dropzone from 'react-dropzone';\n\nimport { Col, Row } from 'react-bootstrap';\n\nconst FileUpload: React.FC<{ onDrop: (files: any[]) => void }> = ({ onDrop }) => {\n  return (\n    <Row>\n      <Col xs={{ span: 6, offset: 3 }}>\n        <Dropzone\n          multiple={false}\n          onDrop={onDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <section>\n              <div {...getRootProps()} style={{ border: '2px dashed grey', margin: '25px' }}>\n                <input {...getInputProps()} />\n                <p className=\"text-center\">Upload a file here!</p>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n      </Col>\n    </Row>\n  );\n};\n\nexport default FileUpload;\n","import React from 'react';\n\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst Footer: React.FC = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <hr/>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <a text-align=\"center\" href={'https://github.com/JamesDalboth/MosaiclyOnline'}>\n            <h4 className=\"text-center\">\n              Source Code\n            </h4>\n          </a>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <p className=\"text-center\">\n            Built by James Dalboth\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <a text-align=\"center\" href={'https://github.com/JamesDalboth/Mosaicly'}>\n            <h4 className=\"text-center\">\n              Original Source Code\n            </h4>\n          </a>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <p className=\"text-center\">\n            Original built by James Dalboth, Matthew Ho, Rohit Prasad and Harry Black\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport ImageDisplay from './ImageDisplay';\nimport InputForm from './InputForm';\nimport FileUpload from './FileUpload';\nimport Footer from './Footer';\n\n// eslint-disable-next-line\nconst request = require('request-promise');\n\ninterface FormFields {\n  searchTerm: string;\n  tileSize: string;\n  colourAdjustment: string;\n};\n\ntype InputChangeEvent = React.FormEvent<any> &\n  {\n    target: {\n      id: keyof FormFields;\n      value: FormFields[keyof FormFields];\n    };\n  }\n\nconst Main: React.FC = () => {\n  const [fields, setFields] = React.useState<FormFields>(\n    {\n      searchTerm: '',\n      tileSize: '',\n      colourAdjustment: '',\n    },\n  );\n  const [imageData, setImageData] = React.useState<string>();\n  const [result, setResult] = React.useState<string>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [missingImage, setMissingImage] = React.useState<boolean>(false);\n\n  const onSubmit = (event: React.FormEvent<any>): void => {\n    event.preventDefault();\n\n    if (imageData === undefined) {\n      setMissingImage(true);\n      return;\n    }\n\n    setMissingImage(false);\n\n    setLoading(true);\n    setResult(undefined);\n\n    request({\n      method: 'POST',\n      url: 'https://hmdvu2o3zh.execute-api.us-east-1.amazonaws.com/prod',\n      body: {\n        'searchTerm': fields.searchTerm,\n        'data': imageData,\n        'tileSize': Number(fields.tileSize),\n        'colourAdjustment': fields.colourAdjustment === 'true',\n      },\n      headers: {\n        'Origin': 'http://dalboth.com/MosaiclyOnline/',\n      },\n      json: true,\n    })\n      .then((url: string) => {\n        setResult(url);\n        setLoading(false);\n      })\n      .catch((err: any) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n\n  const onChange = (event: InputChangeEvent): void => {\n    const key = event.target.id;\n    const val = event.target.value;\n\n    const stateUpdate = { fields: fields as Pick<FormFields, keyof FormFields> };\n    stateUpdate.fields[key] = val;\n    setFields(stateUpdate.fields);\n  };\n\n  const onCheck = (key: string, val: boolean): void => {\n    const stateUpdate = { fields: fields as Pick<FormFields, keyof FormFields> };\n    (stateUpdate as any).fields[key] = '' + val;\n    setFields(stateUpdate.fields);\n  };\n\n  const toBase64 = (file: any): Promise<string> => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = error => reject(error);\n  });\n\n  const onDrop = (files: any[]): void => {\n    const file = files[0];\n    toBase64(file)\n      .then((base64: string) => setImageData(base64))\n      .then(() => setMissingImage(false))\n      .catch(console.log);\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-center\">Mosaicly Online</h1>\n          <hr/>\n        </Col>\n      </Row>\n      <ImageDisplay\n        src1={imageData}\n        src2={result}\n        loading={loading}\n        missingImage={missingImage}/>\n      <FileUpload onDrop={onDrop}/>\n      <Row>\n        <Col xs={{ span: 8, offset: 2 }}>\n          <InputForm onChange={onChange} onSubmit={onSubmit} onCheck={onCheck}/>\n        </Col>\n      </Row>\n      <Row>\n        <Footer/>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\n\nfunction App (): JSX.Element {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './theme.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}